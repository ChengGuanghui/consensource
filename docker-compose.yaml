version: "3"

volumes:
  cargo-registry:
  consensource-shared-data:

services:
  client:
    image: target/consensource:client
    container_name: consensource-client
    build: ./client
    volumes:
      - ./client/public/:/usr/local/apache2/htdocs/
    expose:
      - 80
    ports:
      - "8080:80"

  cli:
    image: target/consensource:cli
    container_name: consensource-cli
    build:
      context: .
      dockerfile: ./cli/Dockerfile
    volumes:
      - cargo-registry:/root/.cargo/registry
      - consensource-shared-data:/shared_data
    entrypoint: |
      bash -c "
       if [ ! -f $HOME/.sawtooth/keys/root.priv ]; then
         sawtooth keygen
       fi;
       mkdir -p /shared_data/keys && \
         creg genesis -o /shared_data/creg-genesis.batch -K /shared_data/keys \
             -g /project/cert_registry/cli/example-genesis.yaml;
       tail -f /dev/null
      "

  validator:
    image: hyperledger/sawtooth-validator:1.0
    container_name: sawtooth-validator
    expose:
      - 4004
    ports:
      - "4004:4004"
    volumes:
      - consensource-shared-data:/shared_data
    entrypoint: |
      bash -c "
        while [ ! -f /shared_data/creg-genesis.batch ]; do
            echo \"Waiting for ConsenSource genesis batches...\"
            sleep 5;
        done;
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen &&
          sawtooth keygen my_key &&
          sawset genesis -k /root/.sawtooth/keys/my_key.priv &&
          sawadm genesis config-genesis.batch /shared_data/creg-genesis.batch
        fi;
        sawtooth-validator -v \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800
          --scheduler parallel
      "

  sawtooth-rest-api:
    image: hyperledger/sawtooth-rest-api:1.0
    container_name: sawtooth-rest-api
    ports:
      - "8008:8008"
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -v -C tcp://validator:4004 --bind sawtooth-rest-api:8008

  rest-api:
    image: target/consensource:rest_api
    container_name: consensource-rest-api
    build:
      context: .
      dockerfile: ./rest_api/Dockerfile
    volumes:
      - cargo-registry:/root/.cargo/registry
    ports:
      - "9009:9009"
      - "9010:9010"
    environment:
      ROCKET_ADDRESS: "0.0.0.0"
      ROCKET_PORT: "9009"
    command: |
      bash -c "
        cert-registry-rest-api -v --dbhost postgres -C tcp://validator:4004
      "

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: sawtooth-settings-tp
    depends_on:
      - validator
    entrypoint: settings-tp -v -C tcp://validator:4004

  processor:
    image: target/consensource:processor
    container_name: consensource-processor
    build:
      context: .
      dockerfile: ./processor/Dockerfile
    volumes:
      - cargo-registry:/root/.cargo/registry
    command: |
      bash -c "
        target/debug/cert-registry-processor -v -C tcp://validator:4004
      "

  postgres:
    image: postgres:alpine
    container_name: cert-registry-postgres
    restart: always
    environment:
      POSTGRES_USER: cert-registry
      POSTGRES_PASSWORD: cert-registry
      POSTGRES_DB: cert-registry
    volumes:
      - "./database/tables:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    expose:
      - 5432

  adminer:
    image: adminer
    container_name: consensource-adminer
    restart: always
    ports:
      - "8081:8080"

  state_delta_subscriber:
    image: target/consensource:state_delta_subscriber
    container_name: consensource-state-delta-sub
    build:
      context: .
      dockerfile: ./state_delta_subscriber/Dockerfile
    volumes:
      - cargo-registry:/root/.cargo/registry
    command: |
      bash -c "
        target/debug/state_delta_subscriber --dbhost postgres -v -C tcp://validator:4004
      "
